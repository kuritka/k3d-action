name: Multicluster demo

on:
  [workflow_dispatch, push]
jobs:
  k3d-multicluster-demo:
    name: Multi cluster with default k3d-action-bridge-network
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create k3d-action-bridge-network
        run: docker network create --driver=bridge --subnet=172.16.0.0/24 k3d-action-bridge-network
      - uses: ./
        name: "Test cluster 1"
        with:
          k3d-name: "test-cluster-1"
          k3d-args: >-
            -p "80:80@agent[0]"
            -p "443:443@agent[0]"
            -p "5053:53/udp@agent[0]"
            --agents 3
            --no-lb
            --network k3d-action-bridge-network
            --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"
      - uses: ./
        name: "Test cluster 2"
        with:
          k3d-name: "test-cluster-2"
          k3d-args: >-
            -p "81:80@agent[0]"
            -p "444:443@agent[0]"
            -p "5054:53/udp@agent[0]"
            --agents 3
            --no-lb
            --network k3d-action-bridge-network
            --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"
      - uses: ./
        name: "Test cluster 3"
        with:
          k3d-name: "test-cluster-3"
          k3d-args: >-
            -p "83:80@agent[0]"
            -p "445:443@agent[0]"
            -p "5055:53/udp@agent[0]"
            --agents 3
            --no-lb
            --network k3d-action-bridge-network
            --k3s-server-arg "--no-deploy=traefik,servicelb,metrics-server"

      - name: Cluster info
        run: kubectl cluster-info --context k3d-test-cluster-1 && kubectl cluster-info --context k3d-test-cluster-2
      - name: Nodes
        run: |
          docker ps -a
          kubectl config use-context k3d-test-cluster-1
          kubectl get nodes -o wide
          kubectl config use-context k3d-test-cluster-2
          kubectl get nodes -o wide
          kubectl config use-context k3d-test-cluster-3
          kubectl get nodes -o wide
      - name: Network
        run: docker network inspect k3d-action-bridge-network
